apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      podName: {{ .Release.Name }}-{{ .Chart.Name }}-pod 
  template:
    metadata:
      labels:
        podName: {{ .Release.Name }}-{{ .Chart.Name }}-pod
      annotations:
      {{- range $key, $val := .Values.deployment.pod.annotations }}
        {{ $key }}: {{ tpl $val $ | quote }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-container
          env:
          - name: S3_HOST
            value: {{ tpl .Values.s3.host . | quote }}
          - name: S3_PORT
            value: {{ tpl .Values.s3.port . | quote }}
          - name: S3_ACCESS_ID
            value: {{ tpl .Values.s3.accessId . | quote }}
          - name: S3_SECRET_KEY
            value: {{ tpl .Values.s3.secretKey . | quote }}
          - name: HEADER_TOKEN
            value: {{ tpl .Values.authentication.opa.customHeaderName . | quote }}
          image: "{{ .Values.image }}:{{ .Values.imageTag}}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
          - containerPort: {{ .Values.ports.nginx.targetPort }}
        {{- if .Values.authentication.opa.enabled }}
        {{- template "nginx-for-s3.envoy-container" . }}
        {{- template "nginx-for-s3.opa-container" . }}
        {{- end}}
      volumes:
      {{- if .Values.authentication.opa.enabled }}
      {{- template "nginx-for-s3.envoy-volumes" . }}
      {{- template "nginx-for-s3.opa-volumes" . }}
      {{- end}}
